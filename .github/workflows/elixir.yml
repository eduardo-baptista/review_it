name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    name: Build and test
    runs-on: ubuntu-latest
    
    services:
      db:
        image: postgres:latest
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.12.1'
        otp-version: '24'

    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Check formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Run tests
      run: mix test

  deploy:
    needs: build # Will only run if the test job succeeds
    if: github.ref == 'refs/heads/master' # Only run this job if it is on the master branch

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master # Check out master instead of the latest commit
          fetch-depth: 0 # Checkout the whole branch
          
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.1
          
      - uses: mhanberg/gigalixir-action@v0.4.0
        with:
          GIGALIXIR_APP: review-it # Feel free to also put this in your secrets
          GIGALIXIR_CLEAN: true # defaults to false
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          MIGRATIONS: false  # defaults to true